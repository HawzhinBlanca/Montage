# GPU-enabled Docker image for AI Video Processing Pipeline

FROM nvidia/cuda:12.2-devel-ubuntu22.04

# Set labels
LABEL org.opencontainers.image.title="AI Video Processing Pipeline (GPU)"
LABEL org.opencontainers.image.description="GPU-accelerated video processing system"
LABEL org.opencontainers.image.vendor="AI Video Pipeline Team"

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,video,utility

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    ffmpeg \
    libpq5 \
    curl \
    pkg-config \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Python 3.11 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Create directories
RUN mkdir -p /app /tmp/video_processing && \
    chown -R appuser:appuser /app /tmp/video_processing

WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-gpu.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt -r requirements-gpu.txt

# Copy application code
COPY --chown=appuser:appuser . .

# Switch to non-root user
USER appuser

# Expose metrics port
EXPOSE 9099

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
    CMD python -c "import subprocess; subprocess.check_call(['nvidia-smi'])" || exit 1

# Default command
CMD ["python", "gpu_worker.py"]