# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-pipeline-ingress
  namespace: video-pipeline
  labels:
    app.kubernetes.io/name: video-pipeline
    app.kubernetes.io/component: ingress
    app.kubernetes.io/instance: production
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT_ID:certificate/CERT_ID
    
    # Security
    alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:us-west-2:ACCOUNT_ID:regional/webacl/NAME/ID
    
    # Health checks
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Load balancing
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true,idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    
    # Rate limiting (if using WAF)
    alb.ingress.kubernetes.io/tags: Environment=production,Service=video-pipeline
spec:
  rules:
  - host: api.video-pipeline.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-pipeline-api
            port:
              number: 80
  - host: metrics.video-pipeline.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-pipeline-metrics
            port:
              number: 9099

---
# Ingress for internal monitoring
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-pipeline-monitoring
  namespace: video-pipeline
  labels:
    app.kubernetes.io/name: video-pipeline
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/instance: production
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /metrics
spec:
  rules:
  - host: internal-metrics.video-pipeline.local
    http:
      paths:
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: video-pipeline-metrics
            port:
              number: 9099